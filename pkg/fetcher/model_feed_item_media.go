/*
 * Fetcher
 *
 * Fetch social media feeds
 *
 * API version: 1.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package fetcher

type FeedItemMedia struct {

	// The URL to the media content
	Url string `json:"url"`

	// The URL to a poster image
	Poster string `json:"poster,omitempty"`

	// The kind of media
	Kind string `json:"kind"`
}

// AssertFeedItemMediaRequired checks if the required fields are not zero-ed
func AssertFeedItemMediaRequired(obj FeedItemMedia) error {
	elements := map[string]interface{}{
		"url": obj.Url,
		"kind": obj.Kind,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseFeedItemMediaRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of FeedItemMedia (e.g. [][]FeedItemMedia), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseFeedItemMediaRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aFeedItemMedia, ok := obj.(FeedItemMedia)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertFeedItemMediaRequired(aFeedItemMedia)
	})
}
