/*
 * Fetcher
 *
 * Fetch social media feeds
 *
 * API version: 1.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package fetcher

type FeedItems struct {

	Items []FeedItem `json:"items"`
}

// AssertFeedItemsRequired checks if the required fields are not zero-ed
func AssertFeedItemsRequired(obj FeedItems) error {
	elements := map[string]interface{}{
		"items": obj.Items,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Items {
		if err := AssertFeedItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseFeedItemsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of FeedItems (e.g. [][]FeedItems), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseFeedItemsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aFeedItems, ok := obj.(FeedItems)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertFeedItemsRequired(aFeedItems)
	})
}
